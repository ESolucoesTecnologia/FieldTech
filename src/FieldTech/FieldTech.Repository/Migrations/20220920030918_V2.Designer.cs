// <auto-generated />
using System;
using FieldTech.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FieldTech.Repository.Migrations
{
    [DbContext(typeof(FieldTechContext))]
    [Migration("20220920030918_V2")]
    partial class V2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FieldTech.Domain.Field.Email", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Dt_Atualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Dt_Inclusao")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("TecnicoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TecnicoId");

                    b.ToTable("Email", (string)null);
                });

            modelBuilder.Entity("FieldTech.Domain.Field.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dt_Atualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Dt_Inclusao")
                        .HasColumnType("datetime");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TecnicoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TecnicoId");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("FieldTech.Domain.Field.Tecnico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CpfCnpj")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Dt_Atualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Dt_Inclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Dt_Nascimento")
                        .HasColumnType("datetime");

                    b.Property<string>("EstadoCivil")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OrgaoEmissor")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Rg")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Tecnico", (string)null);
                });

            modelBuilder.Entity("FieldTech.Domain.Field.Telefone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ddd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dt_Atualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Dt_Inclusao")
                        .HasColumnType("datetime");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TecnicoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TecnicoId");

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("FieldTech.Domain.Field.Email", b =>
                {
                    b.HasOne("FieldTech.Domain.Field.Tecnico", null)
                        .WithMany("EmailList")
                        .HasForeignKey("TecnicoId");

                    b.OwnsOne("FieldTech.Domain.Field.ValueObjects.Email", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("EmailId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Endereco");

                            b1.HasKey("EmailId");

                            b1.ToTable("Email");

                            b1.WithOwner()
                                .HasForeignKey("EmailId");
                        });

                    b.Navigation("Endereco")
                        .IsRequired();
                });

            modelBuilder.Entity("FieldTech.Domain.Field.Endereco", b =>
                {
                    b.HasOne("FieldTech.Domain.Field.Tecnico", null)
                        .WithMany("EnderecoList")
                        .HasForeignKey("TecnicoId");
                });

            modelBuilder.Entity("FieldTech.Domain.Field.Telefone", b =>
                {
                    b.HasOne("FieldTech.Domain.Field.Tecnico", null)
                        .WithMany("TelefoneList")
                        .HasForeignKey("TecnicoId");
                });

            modelBuilder.Entity("FieldTech.Domain.Field.Tecnico", b =>
                {
                    b.Navigation("EmailList");

                    b.Navigation("EnderecoList");

                    b.Navigation("TelefoneList");
                });
#pragma warning restore 612, 618
        }
    }
}
